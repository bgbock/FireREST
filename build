#! /bin/bash

FIREREST_VERSION_MAJOR=0
FIREREST_VERSION_MINOR=1
FIREREST_VERSION_PATCH=5
echo "FireREST version $FIREREST_VERSION_MAJOR.$FIREREST_VERSION_MINOR.$FIREREST_VERSION_PATCH"

echo "PATH     : $PATH"
echo "SHELL    : $SHELL"
echo "SUDO_USER: $SUDO_USER"

if [ "$(type -p lsb_release)" == "" ]; then
  echo "++++++++++++++++++ INSTALLING lsb_release ++++++++++++"
  apt-get install -y lsb_release
fi
if [ "$(arch)" != "armv6l" ] || [ "$(lsb_release -is)" != "Debian" ] ;then
  RASPBIAN=1
else
  RASPBIAN=0
fi

if [ "$SUDO_USER" == "" ]; then
  echo "$SUDO_USER is not defined. You must run this script as superuser:"
  echo '  sudo PATH=$PATH ./build'
  exit -1
fi

if [ "$(type -p siege)" == "" ]; then
  echo "++++++++++++++++++ INSTALLING siege ++++++++++++"
  apt-get install -y siege
else 
  echo COMPONENT siege: installed
fi

if [ "$(type -p node)" == "" ]; then
  echo "++++++++++++++++++ INSTALLING NodeJS ++++++++++++"
  if [ $RASPBIAN -eq 1 ]; then
    mkdir /usr/local/bin/node
    pushd /usr/local/bin/node
    wget http://nodejs.org/dist/v0.11.9/node-v0.11.9-linux-arm-pi.tar.gz
    tar xvzf node-*-linux-arm-pi.tar.gz
    rm node-*-linux-arm-pi.tar.gz
    mv node*/* .
    popd
  else
   echo PLEASE INSTALL nodeJS
   exit -1
  fi
else
  echo COMPONENT NodeJS: installed
fi
#if [ "$(type -p npm)" == "" ]; then
#  echo "You must provide this environment's PATH:"
#  echo '  sudo PATH=$PATH ./build'
#  exit -1
#fi
if [ ! -e node_modules ]; then
  echo "++++++++++++++++++ INSTALLING NodeJS dependencies ++++++++++++"
  npm install
else
  echo COMPONENT node_modules: installed
fi

echo
echo "To launch FireREST web service:"
echo "  node server/firesight.js"
echo 
echo "Verify FireREST web service at http://localhost:8001"
echo

if [ $RASPBIAN -eq 1 ]; then
  echo "COMPONENT Raspberry Pi Debian: NOT AVAILABLE"
  echo
  echo "========================== WARNING ==============================="
  echo "FireREST is currently only supported on Raspberry Pi with Raspbian"
  echo "However, you can use this computer for FireREST demos and load testing"
  echo "=================================================================="
  exit 0
else 
  echo "COMPONENT Raspberry Pi Debian: installed"
fi

if [ "$SUDO_USER" == "" ]; then
  echo "This script must be run with sudo command from a non-root user"
  exit -1
fi

if [ -e version-$FIREREST_VERSION_MAJOR.$FIREREST_VERSION_MINOR ]; then
  echo "COMPONENT FireREST dependencies: OK"
  pullFireFuse=0
else
  echo "COMPONENT FireREST dependencies: out of date"
  pullFireFuse=1
fi
date > version-$FIREREST_VERSION_MAJOR.$FIREREST_VERSION_MINOR

if [ ! -e /dev/firefuse ] || [ $pullFireFuse -ne 0 ] ; then 
  echo "++++++++++++++++++ BUILDING FireFUSE ++++++++++++"
  if [ ! -e FireFUSE ]; then
    sudo -u $SUDO_USER git clone git://github.com/firepick1/FireFUSE
  fi
  pushd FireFUSE
  sudo -u $SUDO_USER git pull
  ./build
  popd
else
  echo COMPONENT /dev/firefuse: installed
fi

echo "FireREST build complete."
