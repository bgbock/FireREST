#! /bin/bash

echo
echo "COMMAND	: $0 $@ # FireREST/FireFUSE visual calibration utility"

function help() {
  echo "SYNOPSIS: fire/calibrate [-h]"
  echo "EXAMPLE	: Generate position offsets"
  echo "	:   fire/calibrate -o"
  echo "EXAMPLE	: Print this documentation:"
  echo "	:   fire/calibrate -h"
}

if [ "$1" == "" ] || [ "$1" == "-h" ]; then help; exit 0; fi

IMAGES=/var/firefuse/calibration
GCODEFIRE=/dev/firefuse/sync/cnc/marlin/gcode.fire
if [ ! -e $GCODEFIRE ]; then
  echo "ERROR	: FireFUSE serial connection to Marlin is unavailable"
  echo "TRY	: See /var/log/firefuse.log for details"
  exit -1
fi

function gcode() {
  if [ "$2" != "" ]; then echo "STATUS	: $2"; fi
  echo "GCODE	: $1"
  echo "$1" > $GCODEFIRE
  RC=$?; if [ $RC -ne 0 ]; then echo "ERROR	: $RC"; exit -1; fi
  return $RC
}

function imageAt() {
  echo "IMAGE	: $1"
  gcode G0$1M400
  RC=$?; if [ $RC -ne 0 ]; then echo "ERROR	: echo $GCODE > $GCODEFIRE => $RC"; exit -1; fi
  #sleep 1
  cp /dev/firefuse/sync/cv/1/camera.jpg $IMAGES/$1.jpg
  RC=$?; if [ $RC -ne 0 ]; then echo "ERROR	: $RC"; exit -1; fi
}

function calcoffset() {
  firesight -ji 0 -p FireSight/json/calcOffset.json -Dtemplate=$IMAGES/$1 -i $IMAGES/$2 
}

function calcoffsetAt() {
  imageAt $1
  RESULT=`firesight -ji 0 -p FireSight/json/calcOffset.json -Dtemplate=$IMAGES/$2.jpg -i $IMAGES/$1.jpg`	
  RC=$?; if [ $RC -ne 0 ]; then echo "ERROR	: $RC"; exit -1; fi
  #echo "RESULT	: $RESULT"
  #DX=`echo $RESULT | grep -o -E "dx.:[-0-9.+]+" | grep -o -E "[-0-9.+]+"`
  #DY=`echo $RESULT | grep -o -E "dy.:[-0-9.+]+" | grep -o -E "[-0-9.+]+"`
  #echo "STATUS	: dx=$DX dy=$DY"
}

function resolutionAtZ() {
  imageAt X0Y0$1
  calcoffsetAt X1Y1$1 X0Y0$1
  DX1=$DX;DY1=$DY
  calcoffsetAt X-1Y1$1 X0Y0$1
  DX2=$DX;DY2=$DY
  calcoffsetAt X1Y-1$1 X0Y0$1
  DX3=$DX;DY3=$DY
  calcoffsetAt X-1Y-1$1 X0Y0$1
  DX4=$DX;DY4=$DY
  EQN="scale=3;sqrt((($DX1-($DX4))^2+($DY1-($DY4))^2)/2)"
  #echo "CALC	: $EQN"
  echo "STATUS	: resolution (1,1,$1):(-1,-1,$1) "`bc <<< $EQN`
  EQN="scale=3;sqrt((($DX2-($DX3))^2+($DY2-($DY3))^2)/2)"
  #echo "CALC	: $EQN"
  echo "STATUS	: resolution (-1,1,$1):(1,-1,$1) "`bc <<< $EQN`
}

if [ "$1" == "-o" ]; then
  gcode G28Z0M400 "Homing"
  sleep 5
  gcode G0Z0Y0Z0M400 "Homing"
  sleep 5

  resolutionAt Z0
  resolutionAt Z-1
  resolutionAt Z-2

  echo "SUCCESS	: calibrated"
  exit 0;
fi
